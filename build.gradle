buildscript {
    repositories {
        maven { url "https://palantir.bintray.com/releases" }
        jcenter()
        gradlePluginPortal()
    }

    dependencies {
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:0.3.26'
        classpath 'com.palantir.gradle.revapi:gradle-revapi:1.2.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:17.2.0'
        classpath 'com.netflix.nebula:gradle-info-plugin:7.1.3'
        classpath 'com.palantir.baseline:gradle-baseline-java:3.7.4'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.3.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.12.2'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:1.17.3'
    }
}

plugins {
    id "org.jetbrains.intellij" version "0.4.13" apply false
}

apply plugin: 'com.palantir.git-version'
apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.consistent-versions'

version System.env.CIRCLE_TAG ?: gitVersion()

allprojects {
    apply plugin: 'com.palantir.java-format'
    group = 'com.palantir.javaformat'
    version = rootProject.version

    repositories {
        jcenter()
        maven { url 'https://dl.bintray.com/palantir/releases/' }
        gradlePluginPortal()
        mavenLocal()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.inferred.processors'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(Checkstyle) {
        enabled = false
    }

    tasks.withType(JavaCompile) {
        options.errorprone.errorproneArgs += ['-Xep:PreconditionsConstantMessage:OFF',
                                              '-Xep:PreferSafeLoggableExceptions:OFF',
                                              '-Xep:PreferSafeLoggingPreconditions:OFF',
                                              '-Xep:SwitchStatementDefaultCase:OFF']
    }

    // Run `./gradlew test -Drecreate=true` to recreate all the expected
    // generated code that we have checked into the repo.
    tasks.withType(Test) {
        systemProperty 'recreate', System.getProperty('recreate', 'false')
    }
}
